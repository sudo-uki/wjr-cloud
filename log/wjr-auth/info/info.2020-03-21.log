2020-03-21 14:43:09 INFO  [springAppName_IS_UNDEFINED,,,] main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$293067e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:43:13 INFO  [wjr-auth,,,] main com.auth.AuthApp No active profile set, falling back to default profiles: default
2020-03-21 14:43:15 INFO  [wjr-auth,,,] main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-21 14:43:15 INFO  [wjr-auth,,,] main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2020-03-21 14:43:15 INFO  [wjr-auth,,,] main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 49ms. Found 0 repository interfaces.
2020-03-21 14:43:16 INFO  [wjr-auth,,,] main org.springframework.cloud.context.scope.GenericScope BeanFactory id=cd5b98b8-0cd7-3344-bcce-2c5de11c3a52
2020-03-21 14:43:16 INFO  [wjr-auth,,,] main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d1664e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:43:16 INFO  [wjr-auth,,,] main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:43:16 INFO  [wjr-auth,,,] main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$76a4d5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:43:16 INFO  [wjr-auth,,,] main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:43:16 INFO  [wjr-auth,,,] main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:43:16 INFO  [wjr-auth,,,] main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$293067e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-03-21 14:43:17 INFO  [wjr-auth,,,] main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8101 (http)
2020-03-21 14:43:17 INFO  [wjr-auth,,,] main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8101"]
2020-03-21 14:43:17 INFO  [wjr-auth,,,] main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-03-21 14:43:17 INFO  [wjr-auth,,,] main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.21]
2020-03-21 14:43:18 INFO  [wjr-auth,,,] main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-03-21 14:43:18 INFO  [wjr-auth,,,] main org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 5036 ms
2020-03-21 14:43:18 INFO  [wjr-auth,,,] main com.netflix.config.sources.URLConfigurationSource To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 14:43:18 INFO  [wjr-auth,,,] main com.netflix.config.DynamicPropertyFactory DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6775c0d1
2020-03-21 14:43:18 INFO  [wjr-auth,,,] main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-03-21 14:43:20 INFO  [wjr-auth,,,] main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-03-21 14:43:20 INFO  [wjr-auth,,,] main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 1 个数据源
2020-03-21 14:43:20 INFO  [wjr-auth,,,] main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-03-21 14:43:20 INFO  [wjr-auth,,,] main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-03-21 14:43:25 INFO  [wjr-auth,,,] main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70df41f9, org.springframework.security.web.context.SecurityContextPersistenceFilter@56554365, org.springframework.security.web.header.HeaderWriterFilter@20f6b6e0, org.springframework.security.web.authentication.logout.LogoutFilter@5e9cb95, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5df54296, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@66130c3b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c86c486, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64a7ad02, org.springframework.security.web.session.SessionManagementFilter@726d8fa0, org.springframework.security.web.access.ExceptionTranslationFilter@2b06681c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3dfa2f64]
2020-03-21 14:43:25 INFO  [wjr-auth,,,] main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/**']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@346330b6, org.springframework.security.web.context.SecurityContextPersistenceFilter@a4dcede, org.springframework.security.web.header.HeaderWriterFilter@2c731a16, org.springframework.security.web.authentication.logout.LogoutFilter@40b8158d, com.auth.filter.ValidateCodeFilter@727956bb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ee02968, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a773f08, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71e2843b, org.springframework.security.web.session.SessionManagementFilter@2a341e3d, org.springframework.security.web.access.ExceptionTranslationFilter@69a3bf40, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@285b491f]
2020-03-21 14:43:25 INFO  [wjr-auth,,,] main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/**']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70d7a49b, org.springframework.security.web.context.SecurityContextPersistenceFilter@332fa1c, org.springframework.security.web.header.HeaderWriterFilter@1aef7428, org.springframework.security.web.authentication.logout.LogoutFilter@d0e4972, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@b2e1df3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1237cade, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c200e57, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d0f7bcf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4509b7, org.springframework.security.web.session.SessionManagementFilter@1610c03c, org.springframework.security.web.access.ExceptionTranslationFilter@7ea039b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5764d421]
2020-03-21 14:43:25 INFO  [wjr-auth,,,] main com.netflix.config.sources.URLConfigurationSource To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-03-21 14:43:25 INFO  [wjr-auth,,,] main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-03-21 14:43:26 INFO  [wjr-auth,,,] main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-03-21 14:43:28 INFO  [wjr-auth,,,] main org.springframework.cloud.netflix.eureka.InstanceInfoFactory Setting initial instance status as: STARTING
2020-03-21 14:43:28 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Initializing Eureka in region us-east-1
2020-03-21 14:43:28 INFO  [wjr-auth,,,] main com.netflix.discovery.provider.DiscoveryJerseyProvider Using JSON encoding codec LegacyJacksonJson
2020-03-21 14:43:28 INFO  [wjr-auth,,,] main com.netflix.discovery.provider.DiscoveryJerseyProvider Using JSON decoding codec LegacyJacksonJson
2020-03-21 14:43:28 INFO  [wjr-auth,,,] main com.netflix.discovery.provider.DiscoveryJerseyProvider Using XML encoding codec XStreamXml
2020-03-21 14:43:28 INFO  [wjr-auth,,,] main com.netflix.discovery.provider.DiscoveryJerseyProvider Using XML decoding codec XStreamXml
2020-03-21 14:43:29 INFO  [wjr-auth,,,] main com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver Resolving eureka endpoints via configuration
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Disable delta property : false
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Single vip registry refresh property : null
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Force full registry fetch : false
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Application is null : false
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Registered Applications size is zero : true
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Application version is -1: true
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Getting all instance registry info from the eureka server
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient The response status is 200
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Starting heartbeat executor: renew interval is: 20
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.InstanceInfoReplicator InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Discovery Client initialized at timestamp 1584773010678 with initial instances count: 1
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry Registering application WJR-AUTH with eureka with status UP
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.netflix.discovery.DiscoveryClient Saw local status change event StatusChangeEvent [timestamp=1584773010683, current=UP, previous=STARTING]
2020-03-21 14:43:30 INFO  [wjr-auth,,,] DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient DiscoveryClient_WJR-AUTH/DESKTOP-0NN556A:wjr-auth:8101: registering service...
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8101"]
2020-03-21 14:43:30 INFO  [wjr-auth,,,] DiscoveryClient-InstanceInfoReplicator-0 com.netflix.discovery.DiscoveryClient DiscoveryClient_WJR-AUTH/DESKTOP-0NN556A:wjr-auth:8101 - registration status: 204
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8101 (http) with context path ''
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration Updating port to 8101
2020-03-21 14:43:30 INFO  [wjr-auth,,,] main com.auth.AuthApp Started AuthApp in 25.26 seconds (JVM running for 27.704)
2020-03-21 14:43:33 INFO  [wjr-auth,,,] RMI TCP Connection(5)-10.0.0.6 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-21 14:43:33 INFO  [wjr-auth,,,] RMI TCP Connection(5)-10.0.0.6 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-03-21 14:43:33 INFO  [wjr-auth,,,] RMI TCP Connection(5)-10.0.0.6 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2020-03-21 14:43:33 INFO  [wjr-auth,,,] parallel-1 io.lettuce.core.EpollProvider Starting without optional epoll library
2020-03-21 14:43:33 INFO  [wjr-auth,,,] parallel-1 io.lettuce.core.KqueueProvider Starting without optional kqueue library
